/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projeto;

import br.ufrn.imd.lp2.imagesegmentation.ImageInformation;
import com.sun.glass.events.KeyEvent;
import java.awt.Component;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.JTextField;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *Método implementado para gerar uma janela gráfica no sistema operacional
 * @author wellitongb
 */
public class InterfaceGrafica extends javax.swing.JFrame {
    private String pathDirectory, nameImage;
    private Double blurLevel;
    private Integer colorRadius, minSize;
    private BufferedImage imageAcinzentada;
    private ImageInformation seg;
    private HashMap<String, ArrayList<Integer>> listImagesTaged;
    private DefaultListModel model;
    private ArrayList<Integer> regionSelected;
    private TrieTree treeSearch;
    private Data arquivo;
    private ArrayList<Data> objectsData;
    private int indexElementList1 = -1;
    /**
     * Cria um objeto da classe InterfaceGrafica
     * @param seg Objeto da classe ImageInformation
     * @param nameImage
     * @param path String do caminho ao arquivo apartir da pasta raiz do sistema
     * @param MinSize Valor, em ponto flutuante, de "Blur Level" para segmentação
     * @param blurLevel Valor, em inteiro, de "Color Radius" para segmentação
     * @param colorRadius Valor, em inteiro, de tamanho minimo das regiões segmentadas
     */
    public InterfaceGrafica(String path,String nameImage, ImageInformation seg, double blurLevel, int colorRadius, int MinSize) {
        this.regionSelected = new ArrayList<>();
        this.pathDirectory = path;
        this.nameImage = nameImage;
        this.blurLevel = blurLevel;
        this.colorRadius = colorRadius;
        this.minSize = MinSize;
        this.seg = seg;
        this.imageAcinzentada = null;
        this.listImagesTaged = new HashMap<>();
        this.model = new DefaultListModel();
        this.treeSearch = new TrieTree();
        this.arquivo = new Data(this.pathDirectory,this.nameImage, this.colorRadius, this.minSize, this.blurLevel, this.seg, this.model, this.listImagesTaged);
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
            Logger.getLogger(InterfaceGrafica.class.getName()).log(Level.SEVERE, null, ex);
        }
        initComponents();     
    }
    
    /**
     * Cria um objeto, com valores padrões, da classe InterfaceGrafica
     */
    public InterfaceGrafica() {
        this.regionSelected = new ArrayList<>();
        String aux = (new File(".")).getAbsolutePath();
        this.pathDirectory = aux.substring(0, (aux.length() - 1));
        this.nameImage = "";
        this.blurLevel = 0.5;
        this.colorRadius = 50;
        this.minSize = 500;
        this.seg = null;
        this.imageAcinzentada = null;
        this.treeSearch = new TrieTree();
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
            Logger.getLogger(InterfaceGrafica.class.getName()).log(Level.SEVERE, null, ex);
        }
        initComponents();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jFrame1 = new javax.swing.JFrame();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jToggleButton2 = new javax.swing.JToggleButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jMenuBar3 = new javax.swing.JMenuBar();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jFrame2 = new javax.swing.JFrame();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList();
        jPanel6 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jFrame3 = new javax.swing.JFrame();
        jScrollPane4 = new javax.swing.JScrollPane();
        jPanel7 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList3 = new javax.swing.JList();
        jTextField2 = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jFrame4 = new javax.swing.JFrame();
        jPanel11 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jMenuBar4 = new javax.swing.JMenuBar();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        jSpinner2 = new javax.swing.JSpinner();
        jSpinner3 = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        jToggleButton1 = new javax.swing.JToggleButton();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        jFileChooser1.setCurrentDirectory(null);
        jFileChooser1.setDialogTitle("Selecione uma Imagem!");
        jFileChooser1.setFileFilter(new MyCustomFilterImageJPG());

        jFrame1.setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        jFrame1.setTitle("Seleção de Rótulos");
        jFrame1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jFrame1.setResizable(false);

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 510, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jToggleButton2.setText("Mostrar segmentação");
        jToggleButton2.setActionCommand("");
        jToggleButton2.setEnabled(false);
        jToggleButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton2ActionPerformed(evt);
            }
        });

        jButton2.setText("Próximo>>");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        jButton3.setText("+");
        jButton3.setEnabled(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "anel", "aneis", "biquíni", "blazer", "blusa", "bolsa", "boina", "boné", "bota", "botas", "brinco", "brincos", "broche", "cachecol", "camisa", "camiseta", "camisola", "calça", "calcinha", "carteira", "cartola", "chapéu", "chinelo", "chuteira", "chuteiras", "cinto", "colar", "colete", "cueca", "espartilho", "fedora", "fundoshi", "gorro", "gravata", "legging", "maiô", "mala", "meia", "meias", "mochila", "óculos", "paletó", "panamá", "pantufa", "pijama", "quepe", "relógio", "roupa de mergulho", "sandália", "sandálias", "sapatilha", "sapatilhas", "sapato", "sapatos", "smoking", "sunga", "sutiã", "tamanco", "tanga", "tênis", "terno", "vestido", "vestido de casamento", "viseira", "--add--" }));

        jList1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList1.setToolTipText("");
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jList1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jList1KeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(jList1);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jToggleButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3))
                    .addComponent(jButton2)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton2, jScrollPane2, jToggleButton2});

        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 269, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jToggleButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addContainerGap())
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButton2, jToggleButton2});

        jPanel4Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButton3, jComboBox1});

        jMenu4.setText("Arquivo");

        jMenuItem3.setText("Abrir");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem3);

        jMenuItem4.setText("salvar");
        jMenuItem4.setEnabled(false);
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem4);

        jMenuBar3.add(jMenu4);

        jFrame1.setJMenuBar(jMenuBar3);

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jFrame2.setTitle("Editar Lista de Itens");
        jFrame2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jFrame2.setResizable(false);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Lista de Itens"));

        jList2.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList2MouseClicked(evt);
            }
        });
        jList2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jList2KeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jList2);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(" "));

        jLabel8.setText("Escreva sua categoria:");

        jTextField1.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });

        jButton4.setText("remover");
        jButton4.setEnabled(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("adicionar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGap(0, 103, Short.MAX_VALUE)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5)
                        .addGap(1, 1, 1)))
                .addContainerGap())
        );

        jPanel6Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton4, jButton5});

        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addContainerGap(86, Short.MAX_VALUE))
        );

        jPanel6Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel8, jTextField1});

        jPanel6Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButton4, jButton5});

        javax.swing.GroupLayout jFrame2Layout = new javax.swing.GroupLayout(jFrame2.getContentPane());
        jFrame2.getContentPane().setLayout(jFrame2Layout);
        jFrame2Layout.setHorizontalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jFrame2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jFrame2Layout.setVerticalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jFrame2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jPanel5, jPanel6});

        jFrame2.getAccessibleContext().setAccessibleParent(jFrame1);

        jFrame3.setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        jFrame3.setTitle("Busca de Imagens");
        jFrame3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jFrame3.setResizable(false);

        jScrollPane4.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jPanel7.setLayout(new java.awt.CardLayout());

        jPanel12.setLayout(new java.awt.GridLayout(1, 3));
        jPanel7.add(jPanel12, "card2");

        jLabel11.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel11.setText("Não há imagens no banco de Dados para essa categoria");
        jPanel13.add(jLabel11);

        jPanel7.add(jPanel13, "card3");

        jScrollPane4.setViewportView(jPanel7);

        jPanel8.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel10.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel10.setText("Digite sua busca:");

        jPanel10.setLayout(new java.awt.CardLayout());

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setText("Mostrar Seguimentação");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("Mostrar Mapa de Rótulos");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton3);
        jRadioButton3.setSelected(true);
        jRadioButton3.setText("Mostrar Imagem Original");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton2)
                    .addComponent(jRadioButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel9Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jRadioButton1, jRadioButton2, jRadioButton3});

        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jRadioButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton2)
                .addContainerGap())
        );

        jPanel9Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jRadioButton1, jRadioButton2});

        jPanel10.add(jPanel9, "card2");

        jList3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList3MouseClicked(evt);
            }
        });
        jList3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jList3KeyReleased(evt);
            }
        });
        jScrollPane3.setViewportView(jList3);

        jPanel10.add(jScrollPane3, "card3");

        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField2KeyReleased(evt);
            }
        });

        jButton6.setText("Pesquisar");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("<<Voltar");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel8Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jPanel8Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton6, jButton7});

        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(304, 304, 304)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton7)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                    .addContainerGap(68, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(141, Short.MAX_VALUE)))
        );

        jPanel8Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButton6, jButton7});

        javax.swing.GroupLayout jFrame3Layout = new javax.swing.GroupLayout(jFrame3.getContentPane());
        jFrame3.getContentPane().setLayout(jFrame3Layout);
        jFrame3Layout.setHorizontalGroup(
            jFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame3Layout.createSequentialGroup()
                .addContainerGap(487, Short.MAX_VALUE)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
            .addGroup(jFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jFrame3Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 467, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(302, Short.MAX_VALUE)))
        );
        jFrame3Layout.setVerticalGroup(
            jFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jFrame3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jFrame3Layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );

        jFrame3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jPanel8, jScrollPane4});

        jFrame4.setTitle("Imagem");
        jFrame4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jFrame4.setResizable(false);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 530, Short.MAX_VALUE)
            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 510, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 402, Short.MAX_VALUE)
            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel11Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        jMenu5.setText("Arquivo");

        jMenuItem6.setText("Salvar Imagem");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem6);

        jMenuBar4.add(jMenu5);

        jFrame4.setJMenuBar(jMenuBar4);

        javax.swing.GroupLayout jFrame4Layout = new javax.swing.GroupLayout(jFrame4.getContentPane());
        jFrame4.getContentPane().setLayout(jFrame4Layout);
        jFrame4Layout.setHorizontalGroup(
            jFrame4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jFrame4Layout.setVerticalGroup(
            jFrame4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Segmentação e Mapa de Rótulos");
        setResizable(false);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel1.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 534, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addGap(14, 14, 14)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 510, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setText("BlurLevel:");

        jLabel3.setText("ColorRadius:");

        jLabel4.setText("MinSize:");

        jSpinner1.setModel(new javax.swing.SpinnerNumberModel(Double.valueOf(0.0d), Double.valueOf(0.0d), null, Double.valueOf(0.01d)));
        jSpinner1.setEnabled(false);
        jSpinner1.setValue(this.blurLevel);
        jSpinner1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner1StateChanged(evt);
            }
        });

        jSpinner2.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        jSpinner2.setEnabled(false);
        jSpinner2.setValue(this.colorRadius);
        jSpinner2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner2StateChanged(evt);
            }
        });

        jSpinner3.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        jSpinner3.setEnabled(false);
        jSpinner3.setValue(this.minSize);
        jSpinner3.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner3StateChanged(evt);
            }
        });

        jLabel5.setText("Total de Regiões:");

        jToggleButton1.setText("Segmentar!");
        jToggleButton1.setEnabled(false);
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jButton1.setText("Próximo>>");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinner3, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jButton1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jToggleButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel2, jLabel3, jLabel4});

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jSpinner1, jSpinner2, jSpinner3});

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton1, jToggleButton1});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jSpinner3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 168, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jToggleButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel2, jLabel3, jLabel4, jLabel5, jLabel6, jSpinner1, jSpinner2, jSpinner3});

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButton1, jToggleButton1});

        jMenu3.setText("Arquivo");

        jMenuItem1.setText("Abrir");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem1);

        jMenuItem2.setText("salvar");
        jMenuItem2.setEnabled(false);
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem2);

        jMenuBar2.add(jMenu3);

        setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * Função do Botão "Segmentar!", chamada ao interagir (clicar) com o botão, da janela "Segmentação e Mapa de Rótulos".
 Esse método faz a atribuição dos valores recebidos pelos "jSpinner's" as variaveis blurLevel, colorRadius e minSize.
 Ele faz a chamada do método mudarImageSegmantation().
 Esse método modifica os valores de icone, texto e habilitação em alguns componentes da janela;
 Quando habilitado com o nome "Mostrar Mapas de Rótulos", ele faz uso do método "regionColor", se tornando resposável por gerar a imagem com o mapa de rótulos acinzentado.
 Quando habilitado com o nome "Mostrar segmentação", ele mostra a imagem segmentada.
 Esse método modifica os valores de icone, texto e habilitação em alguns componetes da janela;
     */
    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        if("Segmentar!".equals(jToggleButton1.getText())){
            this.blurLevel = (Double) jSpinner1.getValue();
            this.colorRadius = (Integer) jSpinner2.getValue();
            this.minSize = (Integer) jSpinner3.getValue();
            Object[] a = Function.changeImageSegmentation(new Data[]{this.arquivo}, 
                    new DefaultListModel[]{this.model}, new HashMap[]{this.listImagesTaged}, 
                    new ArrayList[]{this.regionSelected}, new String[]{this.pathDirectory}, 
                    new String[]{this.nameImage}, new Double[]{this.blurLevel},
                    new Integer[]{this.colorRadius}, new Integer[]{this.minSize});
            this.seg = (ImageInformation) a[0];
            this.model = (DefaultListModel) a[1];
            this.jList3.setModel(this.model);
            this.listImagesTaged = (HashMap<String, ArrayList<Integer>>) a[2];
            this.regionSelected = (ArrayList<Integer>) a[3];
            this.arquivo = (Data) a[4];
            this.jLabel1.setIcon(new ImageIcon(seg.getRegionMarkedImage()));
            this.jLabel6.setText(String.valueOf(seg.getTotalRegions()));
            this.jButton1.setEnabled(true);
            this.jToggleButton1.setText("Mostrar Mapas de Rótulos");
            this.jToggleButton1.setSelected(false);
            this.jList1.setModel(this.model);
            this.jComboBox1.setSelectedIndex(0);
            this.jButton3.setText("+");
        }
        else{
            if("Mostrar Mapas de Rótulos".equals(jToggleButton1.getText())){
                int numeroDeRegioes = seg.getTotalRegions();
                int[] mapRegioes;
                mapRegioes = seg.getSegmentedImageMap();
                int gray[] = Function.regionColor(seg.getOriginalPixels(), mapRegioes, numeroDeRegioes);
                imageAcinzentada = Function.asBufferedImage(gray, seg.getWidth(), seg.getHeight());
                jLabel1.setIcon(new ImageIcon(imageAcinzentada));
                jToggleButton1.setText("Mostrar segmentação");
                jToggleButton1.setSelected(false);
            }
            else{
                this.blurLevel = (Double) jSpinner1.getValue();
                this.colorRadius = (Integer) jSpinner2.getValue();
                this.minSize = (Integer) jSpinner3.getValue();
                jLabel1.setIcon(new ImageIcon(seg.getRegionMarkedImage()));
                jLabel6.setText(String.valueOf(seg.getTotalRegions()));
                jToggleButton1.setText("Mostrar Mapas de Rótulos");
                jToggleButton1.setSelected(false);
            }
        }
    }//GEN-LAST:event_jToggleButton1ActionPerformed
    
    /**
     * Função do controle giratório "BlueLevel",chamada ao interagir (clicar ou digitar valor), da janela "Segmentação e Mapa de Rótulos".
     * Modifica os valores de icone, texto e habilitação em alguns componetes da janela;
     */
    private void jSpinner1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner1StateChanged
        jToggleButton1.setEnabled(true);
        jToggleButton1.setSelected(false);
        jToggleButton1.setText("Segmentar!");
        jButton1.setEnabled(false);
    }//GEN-LAST:event_jSpinner1StateChanged
    
    /**
     * Função do controle giratório "ColorRadius",chamada ao interagir (clicar ou digitar valor), da janela "Segmentação e Mapa de Rótulos".
     * Modifica os valores de icone, texto e habilitação em alguns componetes da janela;
     */
    private void jSpinner2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner2StateChanged
        jToggleButton1.setEnabled(true);
        jToggleButton1.setSelected(false);
        jToggleButton1.setText("Segmentar!");
        jButton1.setEnabled(false);
    }//GEN-LAST:event_jSpinner2StateChanged
    
    /**
     * Função do controle giratório "MinSize",chamada ao interagir (clicar ou digitar valor), da janela "Segmentação e Mapa de Rótulos".
     * Modifica os valores de icone, texto e habilitação em alguns componetes da janela;
     */
    private void jSpinner3StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner3StateChanged
        jToggleButton1.setEnabled(true);
        jToggleButton1.setSelected(false);
        jToggleButton1.setText("Segmentar!");
        jButton1.setEnabled(false);
    }//GEN-LAST:event_jSpinner3StateChanged
    
    /**
     * Função do Botão de menu "Abrir", chamada ao interagir (clicar) com o botão, da janela "Segmentação e Mapa de Rótulos".
     * Esse método faz a abertura da Janela "Selecione uma Imagem!".
     * Modifica os valores de icone, texto e habilitação em alguns componentes da janela;
     * Modifica o valor da variável "caminho_do_arquivo".
     */
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        this.jFileChooser1.setFileFilter(new MyCustomFilterImageJPG());
        int returnVal = jFileChooser1.showOpenDialog(this);
        jMenuItem2.setEnabled(true);
        /*if(jLabel1.isEnabled())
           jFileChooser1.setCurrentDirectory(new File(pathDirectory));*/
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = jFileChooser1.getSelectedFile();
            File directory = new File(".");
            
            this.pathDirectory = directory.getAbsolutePath().substring(0, directory.getAbsolutePath().length() - 1);
            this.nameImage = file.getName().substring(0, (file.getName().length() - 4)); //espero que fucione, o erro pode está aqui
            ImageEdit aux = new ImageEdit(this.pathDirectory, this.nameImage, file.getAbsolutePath());
            
            //System.out.println(this.pathDirectory);
            if(jLabel1.isEnabled()){
                int height = jLabel1.getIcon().getIconHeight();
                int width = jLabel1.getIcon().getIconWidth();
                ImageIcon image = new ImageIcon(file.getAbsolutePath());
                boolean cont = true;
                do{
                    if((image.getIconHeight()) > 380){
                        image = new ImageIcon(aux.saveHeight(380));
                    }
                    else{
                        if((image.getIconWidth()) > 510)
                            image = new ImageIcon(aux.saveWidth(510));
                        else{
                            if((image.getIconHeight()) < 218)
                                image = new ImageIcon(aux.saveHeight(218));
                            if((image.getIconWidth()) < 335)
                                image = new ImageIcon(aux.saveWidth(335));
                            cont = false;
                        }
                    }
                    if(cont)
                        aux.set(this.pathDirectory, this.nameImage, this.pathDirectory + "Images\\" + this.nameImage + ".jpg");
                }while(cont);
                this.jLabel1.setIcon(image);
                height = jLabel1.getIcon().getIconHeight() - height;
                width = jLabel1.getIcon().getIconWidth() - width;
                this.setSize(width + this.getWidth(), height + this.getHeight());
            }
            else{
                ImageIcon image = new ImageIcon(file.getAbsolutePath());
                jLabel1.setEnabled(true);
                boolean cont = true;
                do{
                    if((image.getIconHeight()) > 381){
                        image = new ImageIcon(aux.saveHeight(380));
                    }
                    else{
                        if((image.getIconWidth()) > 511){
                            image = new ImageIcon(aux.saveWidth(510));
                        }
                        else{
                            if((image.getIconHeight()) < 218)
                                image = new ImageIcon(aux.saveHeight(218));
                            if((image.getIconWidth()) < 335)
                                image = new ImageIcon(aux.saveWidth(335));
                            cont = false;
                        }
                    }
                    if(cont)
                        aux.set(this.pathDirectory, this.nameImage, this.pathDirectory + "Images\\" + this.nameImage + ".jpg");
                }while(cont);
                this.jLabel1.setIcon(image);
                int height = jLabel1.getIcon().getIconHeight() - 380;
                int width = jLabel1.getIcon().getIconWidth() - 506;
                this.setSize(width + this.getWidth(), height + this.getHeight());
            }
            jLabel6.setText("");
            this.blurLevel = 0.5;
            this.colorRadius = 50;
            this.minSize = 500;
            jButton1.setEnabled(false);
            jToggleButton1.setEnabled(true);
            jToggleButton1.setText("Segmentar!");
            jSpinner1.setEnabled(true);
            jSpinner2.setEnabled(true);
            jSpinner3.setEnabled(true);
            jSpinner1.setValue(this.blurLevel);
            jSpinner2.setValue(this.colorRadius);
            jSpinner3.setValue(this.minSize);
            this.listImagesTaged = new HashMap<>();
            this.model = new DefaultListModel();
            this.jList1.setModel(model);
            this.regionSelected = new ArrayList<>();
            this.jButton3.setText("+");
            this.jComboBox1.setSelectedIndex(0);
            this.jMenuItem4.setEnabled(true);
            this.jToggleButton2.setEnabled(true);
            this.jButton2.setEnabled(true);
            this.jButton3.setEnabled(true);
            
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed
    
    /**
     * Função do Botão "Próximo>>", chamada ao interagir (clicar) com o botão, da janela "Segmentação e Mapa de Rótulos".
     * Esse método recolhe a localização e tamanho da janela "Segmentação e Mapa de Rótulos", desabilita ela, e habilita a janela "Seleção de Rótulos", com as informações coletadas.
     */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.jFrame1.setLocation(this.getLocation());
        this.jFrame1.setVisible(true);
        this.setVisible(false);            
        this.jFrame1.setSize(this.getSize());
        if(!this.regionSelected.isEmpty())
            this.regionSelected = new ArrayList<>();
        this.jList1.clearSelection();
        this.jButton3.setText("+");
        DefaultComboBoxModel aux = (DefaultComboBoxModel) this.jComboBox1.getModel();
        String add = (String) aux.getElementAt(aux.getSize() - 1);
        aux.removeElementAt(aux.getSize() - 1);
        aux = (DefaultComboBoxModel) Function.getAllElements(aux, false);
        aux.addElement(add);
        this.jComboBox1.setModel(aux);
        this.jComboBox1.setSelectedIndex(0);
        this.jToggleButton2.setText(this.jToggleButton1.getText());
        if(this.jMenuItem4.isEnabled()){
            if("Mostrar Mapas de Rótulos".equals(jToggleButton1.getText())){
                this.jLabel7.setIcon(new ImageIcon(seg.getRegionMarkedImage()));
            }
            else{
                this.jLabel7.setIcon(new ImageIcon(imageAcinzentada));
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    
    /**
     * Função do Botão de menu "salvar", chamada ao interagir (clicar) com o botão, da janela "Segmentação e Mapa de Rótulos".
     * Esse método faz a abertura da Janela "Salvando Imagem!".
     * Ele faz a escrita da imagem original, segmentada ou do mapa de rótulo num arquivo com o mesmo nome ou diferente do que foi aberto, em formato ".jpg".
     */
    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        JFileChooser janelinha = new JFileChooser();
        janelinha.setDialogTitle("Salvando Imagem!");
        janelinha.setFileFilter(new MyCustomFilterImageJPG());
        janelinha.setSelectedFile(jFileChooser1.getSelectedFile());
        int returnVal = janelinha.showSaveDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File outputfile = janelinha.getSelectedFile();
            try {
                if("Segmentar!".equals(jToggleButton1.getText())){
                    ImageIO.write(seg.getOriginalImage(), "jpg", outputfile);
                }
                else{
                    if("Mostrar segmentação".equals(jToggleButton1.getText())){
                        ImageIO.write(imageAcinzentada, "jpg", outputfile);
                    }
                    else{
                        ImageIO.write(seg.getRegionMarkedImage(), "jpg", outputfile);
                    }                    
                }
                JOptionPane.showMessageDialog(null, "Imagem Salva com Sucesso!");
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "Falha ao salvar Imagem!");
                Logger.getLogger(InterfaceGrafica.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed
    /**
     * Método por mostrar a imagem segmentada, qando seu nome for "Mostrar segmentação" , ou a imagem em mapa de rótulo, quando seu nome for "Mostrar mapa de rótulos".
     * Esse método faz atribuição de valores para a variável imageAcinzentada
     * @param evt parâmetro não utilizado, use null
     */
    private void jToggleButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton2ActionPerformed
        if("Mostrar Mapas de Rótulos".equals(jToggleButton2.getText())){
            int numeroDeRegioes = seg.getTotalRegions();
            int[] mapRegioes;
            mapRegioes = seg.getSegmentedImageMap();
            
            int gray[] = Function.regionColor(seg.getOriginalPixels(), mapRegioes, numeroDeRegioes);
            imageAcinzentada = Function.asBufferedImage(gray, seg.getWidth(), seg.getHeight());
            if(!this.regionSelected.isEmpty())
                Function.modificationImage(gray, this.seg, this.regionSelected, this.jLabel7);
            else
                jLabel7.setIcon(new ImageIcon(imageAcinzentada));
            jToggleButton2.setText("Mostrar segmentação");
            jToggleButton2.setSelected(false);
            }
            else{
                if(!this.regionSelected.isEmpty())
                   Function.modificationImage(this.seg.getRegionMarkedPixels(), this.seg, this.regionSelected, this.jLabel7);
                else
                    jLabel7.setIcon(new ImageIcon(seg.getRegionMarkedImage()));
                jToggleButton2.setText("Mostrar Mapas de Rótulos");
                jToggleButton2.setSelected(false);
            }
    }//GEN-LAST:event_jToggleButton2ActionPerformed
/**
     * Método responsável pela mudança de janela, da janela atual para a janela anterior
     * @param evt paramêtro não utilizado, use null
     */
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if("<<Voltar".equals(jButton2.getText())){
            this.setLocation(this.jFrame1.getLocation());
            this.setSize(this.jFrame1.getSize());
            this.setVisible(true);
            this.jFrame1.setVisible(false);
            if(!jButton1.isEnabled()){
                this.jLabel1.setIcon(new ImageIcon(seg.getOriginalImage()));
            }
            else{
                this.jToggleButton1.setText(this.jToggleButton2.getText());
                if("Mostrar segmentação".equals(jToggleButton1.getText()))
                    this.jLabel1.setIcon(new ImageIcon(imageAcinzentada));
                else
                    this.jLabel1.setIcon(new ImageIcon(seg.getRegionMarkedImage()));
            }
        
            jMenuItem2.setEnabled(true);
            jLabel1.setEnabled(true);
            jButton1.setEnabled(false);
            jToggleButton1.setEnabled(true);
            jToggleButton1.setText("Segmentar!");
            jSpinner1.setEnabled(true);
            jSpinner2.setEnabled(true);
            jSpinner3.setEnabled(true);
        }
        if("Próximo>>".equals(jButton2.getText())){
            this.jFrame3.setLocation(this.jFrame1.getLocation());
            this.jFrame3.setVisible(true);
            this.jFrame1.setVisible(false);
            this.jFrame3.setSize(785, 463);
            this.jTextField2.setFocusTraversalKeysEnabled(false);
            this.jList3.setFocusTraversalKeysEnabled(false);
            File directory = new File(this.pathDirectory + "Categories\\");
            this.treeSearch = new TrieTree();
            if(directory.isDirectory()){
                File[] listOfFiles = directory.listFiles();
                for(int i = 0; i < listOfFiles.length; i++){
                    int lenght = (listOfFiles[i].getName().length() - 9);
                    this.treeSearch.insertWord(listOfFiles[i].getName().substring(0, lenght));
                }
            }
            //---add mais funções aqui para outros buttons ------
        }
    }//GEN-LAST:event_jButton2ActionPerformed
    /**
     * Método responsável por acionar o método abrir da classe dado. Ele também atribiu os valores recebidos por essa classe a cada variável respectiva.
     * @param evt Não utilizado, ude null.
     */
    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        try {
            if(jMenuItem4.isEnabled())
                arquivo.Abrir();
            else
                arquivo = new Data();
            if(arquivo.getModel() != null){
                this.jToggleButton2.setEnabled(true);
                this.jButton2.setEnabled(true);
                this.jButton2.setText("<<Voltar");
                this.jButton3.setEnabled(true);
                this.pathDirectory = arquivo.getPathDirectory();
                this.nameImage = arquivo.getNameFile();
                this.blurLevel = arquivo.getBlurLevel();
                this.colorRadius = arquivo.getColorRadius();
                this.minSize = arquivo.getMinSize();
                this.seg = arquivo.getSeg();
                this.imageAcinzentada = arquivo.getImageAcinzentada();
                this.model = arquivo.getModel();
                this.listImagesTaged = arquivo.getListImagesTaged();
                jComboBox1.setSelectedIndex(0);
                jButton3.setText("+");
                jList1.setModel(this.model);
                jList1.setVisibleRowCount(seg.getTotalRegions());
                jSpinner1.setValue(this.blurLevel);
                jSpinner2.setValue(this.colorRadius);
                jSpinner3.setValue(this.minSize);
                jLabel6.setText(String.valueOf(seg.getTotalRegions()));
                if(jMenuItem4.isEnabled()){
                    int height = jLabel7.getIcon().getIconHeight();
                    int width = jLabel7.getIcon().getIconWidth();
                    this.jLabel7.setIcon(new ImageIcon(seg.getRegionMarkedImage()));
                    height = jLabel7.getIcon().getIconHeight() - height;
                    width = jLabel7.getIcon().getIconWidth() - width;
                    this.jFrame1.setSize(width + this.jFrame1.getWidth(), height + this.jFrame1.getHeight());
                }
                else{
                    this.jMenuItem4.setEnabled(true);
                    jLabel7.setIcon(new ImageIcon(seg.getRegionMarkedImage()));
                    int height = jLabel7.getIcon().getIconHeight() - 380;
                    int width = jLabel7.getIcon().getIconWidth() - 506;
                    this.jFrame1.setSize(width + this.jFrame1.getWidth(), height + this.jFrame1.getHeight());
                }
            }
        } catch (IOException | ClassNotFoundException ex) {
            Logger.getLogger(InterfaceGrafica.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.jToggleButton2.setText("Mostrar Mapas de Rótulos");
        if(!this.regionSelected.isEmpty())
            this.regionSelected = new ArrayList<>();
    }//GEN-LAST:event_jMenuItem3ActionPerformed
    /**
     * Método responsável por chamar o método salvar da classe dado.
     * @param evt parâmetro não utilizado, use null.
     */
    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        try {
            arquivo.Salve();
            this.jButton2.setText("Próximo>>");
        } catch (IOException ex) {
            Logger.getLogger(InterfaceGrafica.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem4ActionPerformed
    /**
     * Método responsável por adicionar elementos na lista, quando possuir o texto "+". Quando possuir o texto "-", ele remove o elemento selecionado da lista.
     * @param evt Parâmetro evt não utilizado, use null. 
    */
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       if(this.jButton3.getText().equals("+")){
            if(this.jComboBox1.getSelectedItem().equals("--add--")){
               this.jList2.setFocusTraversalKeysEnabled(false);
               this.jTextField1.setFocusTraversalKeysEnabled(false);
               this.jFrame2.setSize(527, 257);
               DefaultComboBoxModel aux = (DefaultComboBoxModel) this.jComboBox1.getModel();
               DefaultComboBoxModel aux2 = new DefaultComboBoxModel();
               for(int i = 0; i < aux.getSize() - 1; i++){
                   aux2.addElement(aux.getElementAt(i));
               }
               //aux.removeElementAt(aux.getSize() - 1);
               this.jList2.setModel(aux2);
               JDialog dialog = new JDialog(this.jFrame1, this.jFrame2.getTitle(), true);
               dialog.getContentPane().add(jFrame2.getContentPane());
               dialog.pack();
               dialog.setVisible(true);
               //-----adicionar mais codigo ainda----
            }
            else{
                if(!this.regionSelected.isEmpty()){
                    this.jButton2.setText("<<Voltar");
                    if(!this.model.contains(this.jComboBox1.getSelectedItem()))
                        this.model.addElement(this.jComboBox1.getSelectedItem());
                    this.model  = (DefaultListModel) Function.getAllElements(this.model, true);
                    ArrayList<Integer> obj = new ArrayList<>();
                    obj.addAll(this.regionSelected);
                    this.listImagesTaged.put((String) this.jComboBox1.getSelectedItem(), obj);
                    this.jList1.setModel(this.model);
                    this.jList1.setVisibleRowCount(seg.getTotalRegions());
                    if(!this.regionSelected.isEmpty())
                        this.regionSelected = new ArrayList<>();
                    this.jLabel7.setIcon(new ImageIcon(seg.getRegionMarkedImage()));
                    this.jComboBox1.setSelectedIndex(0);
                }
            }
        }
        else{
            this.jButton2.setText("<<Voltar");
            if(!this.model.isEmpty()){
                Object selected = this.jList1.getSelectedValue();
                this.listImagesTaged.remove(selected);
                this.model.removeElementAt(this.jList1.getSelectedIndex());
                this.jList1.setModel(this.model);
                this.jList1.setVisibleRowCount(seg.getTotalRegions());
                if(!this.regionSelected.isEmpty())
                    this.regionSelected = new ArrayList<>();
                this.jLabel7.setIcon(new ImageIcon(seg.getRegionMarkedImage()));
                this.jComboBox1.setSelectedIndex(0);
                this.jButton3.setText("+");
            }
        }
        arquivo.set(this.nameImage, this.blurLevel, this.colorRadius, this.minSize, this.seg, this.model, this.listImagesTaged);
    }//GEN-LAST:event_jButton3ActionPerformed
    /**
     * Método responsável por destacar a região da imagem selecionada a partir de um clique do mouse. 
     * @param evt parâmetro resonsável por iformar as coordenadas da região do pxel clickado.
     */
    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        
        int[] imageMap = seg.getSegmentedImageMap();
        Integer region = imageMap[evt.getX() + (evt.getY() * seg.getWidth())];
        if(this.regionSelected.indexOf(region) == -1)
            this.regionSelected.add(region);
        else{
            this.regionSelected.remove(region);
        }
        if(this.regionSelected.isEmpty()){
            if("Mostrar segmentação".equals(jToggleButton2.getText())){
                jLabel7.setIcon(new ImageIcon(imageAcinzentada));
            }
            else{    
                BufferedImage image = seg.getOriginalImage();
                image.setRGB(0, 0, image.getWidth(), image.getHeight(), seg.getRegionMarkedPixels(), 0, image.getWidth());
                jLabel7.setIcon(new ImageIcon(image));
            }
        }
        else{
            if("Mostrar segmentação".equals(jToggleButton2.getText())){
                int gray[] = Function.regionColor(seg.getOriginalPixels(), seg.getSegmentedImageMap(), seg.getTotalRegions());
                Function.modificationImage(gray, this.seg, this.regionSelected, this.jLabel7);
            }
            else{
                int[] imageMarked = seg.getRegionMarkedPixels();
                Function.modificationImage(imageMarked, this.seg, this.regionSelected, this.jLabel7);
            }
        }
        this.arquivo.set(this.nameImage, this.blurLevel, this.colorRadius, this.minSize, this.seg, this.model, this.listImagesTaged);
    }//GEN-LAST:event_jLabel7MouseClicked
    /**
     * Método responsável por mostrar a imagem modificada a partir do elemento selecionado na lista
     * @param evt parâmetro não utilizado, use null.
     */
    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        if(!this.model.isEmpty()){
            int indexElementAtual = this.jList1.getSelectedIndex();
            if(indexElementAtual != this.indexElementList1){
                this.indexElementList1 = indexElementAtual;
                Object texto = this.jList1.getModel().getElementAt(this.indexElementList1);
                this.regionSelected = listImagesTaged.get(texto);
                if("Mostrar segmentação".equals(jToggleButton2.getText())){
                    int gray[] = Function.regionColor(seg.getOriginalPixels(), seg.getSegmentedImageMap(), seg.getTotalRegions());
                    Function.modificationImage(gray, this.seg, this.regionSelected, this.jLabel7);
                }
                else{
                    int[] imageMarked = seg.getRegionMarkedPixels();
                    Function.modificationImage(imageMarked, this.seg, this.regionSelected, this.jLabel7);
                }
                this.jComboBox1.setSelectedItem(texto);
                this.jButton3.setText("-");
            }
            else{
                this.jList1.clearSelection();
                this.indexElementList1 = -1;
                this.regionSelected = new ArrayList<>();                
                this.jLabel7.setIcon(new ImageIcon(this.seg.getRegionMarkedImage()));
                this.jComboBox1.setSelectedIndex(0);
                this.jButton3.setText("+");
            }
        }
    }//GEN-LAST:event_jList1MouseClicked

   /**
     * Método responsável por mudar o item selecionado na lista a partir do comando de seta no teclado.
     * @param evt parâmetro não utilizado, use null.
     */
    private void jList1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jList1KeyReleased
        if(this.model!= null && !this.model.isEmpty()){
            int indexElement = this.jList1.getSelectedIndex();
            Object texto = this.jList1.getModel().getElementAt(indexElement);
            this.regionSelected = listImagesTaged.get(texto);
            if("Mostrar segmentação".equals(jToggleButton2.getText())){
                int gray[] = Function.regionColor(seg.getOriginalPixels(), seg.getSegmentedImageMap(), seg.getTotalRegions());
                Function.modificationImage(gray, this.seg, this.regionSelected, this.jLabel7);
            }
            else{
                int[] imageMarked = seg.getRegionMarkedPixels();
                Function.modificationImage(imageMarked, this.seg, this.regionSelected, this.jLabel7);
            }
            this.jComboBox1.setSelectedItem(texto);
            this.jButton3.setText("-");
        }
    }//GEN-LAST:event_jList1KeyReleased

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if(!this.jList2.isSelectionEmpty()){
            int index = this.jList2.getSelectedIndex();
            DefaultComboBoxModel aux = (DefaultComboBoxModel) this.jList2.getModel();
            aux.removeElementAt(index);
            DefaultComboBoxModel aux2 = new DefaultComboBoxModel();
            for(int i = 0; i < aux.getSize(); i++){
                aux2.addElement(aux.getElementAt(i));
            }
            aux2.addElement("--add--");
            this.jList2.setModel(aux);
            this.jComboBox1.setModel(aux2);
            this.jTextField1.setText("");
            this.jButton5.setText("adicionar");
            this.jButton4.setEnabled(false);
            this.jButton5.setEnabled(true);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        if(this.jButton5.getText().compareTo("editar") == 0){
            int index = this.jList2.getSelectedIndex();
            DefaultComboBoxModel aux = (DefaultComboBoxModel) this.jList2.getModel();
            aux.removeElementAt(index);
            aux.addElement(this.jTextField1.getText().toLowerCase());
            aux = (DefaultComboBoxModel) Function.getAllElements(aux, false);
            DefaultComboBoxModel aux2 = new DefaultComboBoxModel();
            for(int i = 0; i < aux.getSize(); i++){
                aux2.addElement(aux.getElementAt(i));
            }
            aux2.addElement("--add--");
            this.jList2.setModel(aux);
            this.jComboBox1.setModel(aux2);
            this.jTextField1.setText("");
            this.jButton5.setText("adicionar");
            this.jButton4.setEnabled(false);
        }
        else{
            DefaultComboBoxModel aux = (DefaultComboBoxModel) this.jList2.getModel();
            aux.addElement(this.jTextField1.getText().toLowerCase());
            //aux.removeElementAt(aux.getSize() - 1);
            aux = (DefaultComboBoxModel) Function.getAllElements(aux, false);
            DefaultComboBoxModel aux2 = new DefaultComboBoxModel();
            for(int i = 0; i < aux.getSize(); i++){
                aux2.addElement(aux.getElementAt(i));
            }
            aux2.addElement("--add--");
            this.jList2.setModel(aux);
            this.jComboBox1.setModel(aux2);
            this.jTextField1.setText("");
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jList2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList2MouseClicked
        String aux = (String) this.jList2.getSelectedValue();
        this.jTextField1.setText(aux);
        this.jButton5.setText("editar");
        this.jButton4.setEnabled(true);
        this.jButton5.setEnabled(false);
        this.jTextField1.requestFocus();
    }//GEN-LAST:event_jList2MouseClicked

    private void jList2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jList2KeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_TAB){
            if(this.jTextField1.getText().compareTo("") != 0 && !this.jList2.isSelectionEmpty()){
                this.jTextField1.setText("");
                this.jButton5.setText("adicionar");
                this.jButton4.setEnabled(false);
                this.jList2.clearSelection();
                this.jTextField1.requestFocus();
            }
        }
        else{
            String aux = (String) this.jList2.getSelectedValue();
            this.jTextField1.setText(aux);
            this.jButton5.setText("editar");
            this.jButton5.setEnabled(false);
            this.jButton4.setEnabled(true);
        }
    }//GEN-LAST:event_jList2KeyReleased

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        switch(evt.getKeyCode()){
            case KeyEvent.VK_TAB:
                this.jList2.clearSelection();
                this.jList2.requestFocus();
                break;
            case KeyEvent.VK_ENTER:
                jButton5ActionPerformed(null);
                break;
            default:
                if(this.jTextField1.getText().compareTo("") == 0){
                    this.jButton5.setText("adicionar");
                    this.jButton5.setEnabled(true);
                    this.jButton4.setEnabled(false);
                    this.jList2.clearSelection();
                }
                else{
                    if(!this.jList2.isSelectionEmpty()){
                        String aux = (String) this.jList2.getSelectedValue();
                        if(this.jTextField1.getText().equalsIgnoreCase(aux)){
                            this.jButton4.setEnabled(true);
                            this.jButton5.setEnabled(false);
                        }
                        else{
                            this.jButton4.setEnabled(false);
                            this.jButton5.setEnabled(true);
                            this.jButton5.setText("editar");
                        }
                    }
                }
        }
    }//GEN-LAST:event_jTextField1KeyReleased

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        this.jFrame1.setLocation(this.jFrame3.getLocation());
        this.jFrame1.setVisible(true);
        this.jFrame3.setVisible(false);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jTextField2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyReleased
        String word = this.jTextField2.getText();
        switch(evt.getKeyCode()){
            case KeyEvent.VK_ENTER:
                if(!this.jList3.isSelectionEmpty() && word.compareTo((String) this.jList3.getSelectedValue()) != 0){
                    this.jTextField2.setText((String) this.jList3.getSelectedValue());
                    Function.changePanelCardLayout(new JPanel[]{this.jPanel10},new Component[]{this.jPanel9});
                }
                else{
                    this.jButton6ActionPerformed(null);
                }
                break;
            case KeyEvent.VK_TAB:
                this.jTextField2.setText((String) this.jList3.getSelectedValue());
                Function.changePanelCardLayout(new JPanel[]{this.jPanel10},new Component[]{this.jPanel9});
                break;
            case KeyEvent.VK_UP:
            case KeyEvent.VK_DOWN:
                this.jList3.requestFocus();
                break;
            default: 
                if(word.compareTo("") == 0){
                    Function.changePanelCardLayout(new JPanel[]{this.jPanel10},new Component[]{this.jPanel9});
                    this.jList3.removeAll();
                }
                else{
                    DefaultListModel list = new DefaultListModel();
                    List aux = this.treeSearch.getWordsFromPreffix(word);
                    if(aux != null){
                        for(Object elements : aux) {
                            list.addElement(elements);
                        }
                        this.jList3.setModel(list);
                        this.jList3.setSelectedIndex(0);
                        Function.changePanelCardLayout(new JPanel[]{this.jPanel10}, new Component[]{this.jScrollPane3});
                    }
                    else{
                        this.jList3.clearSelection();
                        Function.changePanelCardLayout(new JPanel[]{this.jPanel10},new Component[]{this.jPanel9});
                    }
                }
        }
    }//GEN-LAST:event_jTextField2KeyReleased

    private void jList3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jList3KeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_ENTER || evt.getKeyCode() == KeyEvent.VK_TAB){
            this.jTextField2.setText((String) this.jList3.getSelectedValue());
            Function.changePanelCardLayout(new JPanel[]{this.jPanel10},new Component[]{this.jPanel9});
            this.jTextField2.requestFocus();
        }
    }//GEN-LAST:event_jList3KeyReleased

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        if(!this.jList3.isSelectionEmpty() && this.jTextField2.getText().compareTo((String) this.jList3.getSelectedValue()) == 0){
            this.objectsData = new ArrayList<>();
            try {
                Function.initObjectsData(new String[]{this.pathDirectory},new ArrayList[]{this.objectsData}, new JTextField[]{this.jTextField2});  
                Function.repaintPanelWithJlabels(new JFrame[]{this.jFrame3},new JFrame[]{this.jFrame4},new JPanel[]{this.jPanel7},new JPanel[]{this.jPanel12},new JLabel[]{this.jLabel9},new ArrayList[]{this.objectsData},new JRadioButton[]{this.jRadioButton3, this.jRadioButton1, this.jRadioButton2});
            } 
            catch (IOException | ClassNotFoundException ex) {
                    Logger.getLogger(InterfaceGrafica.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else{
            Function.changePanelCardLayout(new JPanel[]{this.jPanel7},new Component[]{this.jPanel13});
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jList3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList3MouseClicked
        if(!this.jList3.isSelectionEmpty()){
            this.jTextField2.setText((String) this.jList3.getSelectedValue());
            Function.changePanelCardLayout(new JPanel[]{this.jPanel10},new Component[]{this.jPanel9});
            this.jTextField2.requestFocus();
        }
    }//GEN-LAST:event_jList3MouseClicked

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        JFileChooser window = new JFileChooser();
        window.setDialogTitle("Salvando Imagem!");
        window.setFileFilter(new MyCustomFilterImageJPG());
        window.setSelectedFile(jFileChooser1.getSelectedFile());
        int returnVal = window.showSaveDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            String path = window.getSelectedFile().getAbsolutePath();
            if(!window.getSelectedFile().getName().endsWith(".jpg")){
                window.setSelectedFile(new File(path.concat(".jpg")));
            }
            File outputfile = window.getSelectedFile();
            try {
                    ImageIcon aux = (ImageIcon) this.jLabel9.getIcon();
                    ImageIO.write((BufferedImage)aux.getImage(), "jpg", outputfile);
                JOptionPane.showMessageDialog(null, "Imagem Salva com Sucesso!");
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "Falha ao salvar Imagem!");
                Logger.getLogger(InterfaceGrafica.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        jRadioButton1ActionPerformed(evt);
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        try {
            Function.jRadioButtonActionPerformed(evt,new JFrame[]{this.jFrame3},new JFrame[]{this.jFrame4},new JPanel[]{this.jPanel7},new JPanel[]{this.jPanel12},new JLabel[]{this.jLabel9},new ArrayList[] {this.objectsData},new JRadioButton[]{this.jRadioButton3, this.jRadioButton1, this.jRadioButton2});
        } catch (IOException ex) {
            Logger.getLogger(InterfaceGrafica.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        jRadioButton1ActionPerformed(evt);
    }//GEN-LAST:event_jRadioButton2ActionPerformed

            
   /**
    * Método responsável por executar o objeto InterfaceGrafica.
    * @param frame Objeto do tipo InterfaceGrafica
    */
    public void run(InterfaceGrafica frame) {
        /* Set the Metal look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        
        /*try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfaceGrafica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfaceGrafica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfaceGrafica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfaceGrafica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                frame.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JFrame jFrame2;
    private javax.swing.JFrame jFrame3;
    private javax.swing.JFrame jFrame4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList jList1;
    private javax.swing.JList jList2;
    private javax.swing.JList jList3;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuBar jMenuBar3;
    private javax.swing.JMenuBar jMenuBar4;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JSpinner jSpinner2;
    private javax.swing.JSpinner jSpinner3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButton2;
    // End of variables declaration//GEN-END:variables
}
